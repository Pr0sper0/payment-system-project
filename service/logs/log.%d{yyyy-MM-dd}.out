[2023-07-09 14:49:53 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
][2023-07-09 14:49:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
][2023-07-09 14:49:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
][2023-07-09 14:49:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
][2023-07-09 14:49:53 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.6.15.Final
][2023-07-09 14:49:53 DEBUG Environment:199 - HHH000206: hibernate.properties not found
][2023-07-09 14:49:53 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
][2023-07-09 14:49:53 DEBUG LocalXmlResourceResolver:87 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
][2023-07-09 14:49:53 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
][2023-07-09 14:49:53 DEBUG Configuration:742 - Building session factory using internal StandardServiceRegistryBuilder
][2023-07-09 14:49:53 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
][2023-07-09 14:49:53 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
][2023-07-09 14:49:53 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
][2023-07-09 14:49:53 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
][2023-07-09 14:49:53 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52350abb
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ebd56e9
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f66e802
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35038141
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50305a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65f87a2c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e9658b5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@52eacb4b
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27f9e982
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@21680803
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2d8f2f3a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@1af7f54a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@68ed96ca
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bdf6bb7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3abd581e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3fabf088
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b85300e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a23a01d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4acf72b6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7561db12
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3301500b
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24b52d3e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15deb1dc
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e9c413e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57a4d5ee
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
][2023-07-09 14:49:54 WARN  pooling:75 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
][2023-07-09 14:49:54 INFO  pooling:119 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:49:54 INFO  pooling:125 - HHH10001001: Connection properties: {password=pass, user=postgres}
][2023-07-09 14:49:54 INFO  pooling:132 - HHH10001003: Autocommit mode: false
][2023-07-09 14:49:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
][2023-07-09 14:49:54 INFO  DriverManagerConnectionProviderImpl:322 - HHH000115: Hibernate connection pool size: 20 (min=1)
][2023-07-09 14:49:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 15.2 (Debian 15.2-1.pgdg110+1)
      major : 15
      minor : 2
][2023-07-09 14:49:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
][2023-07-09 14:49:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
][2023-07-09 14:49:54 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
][2023-07-09 14:49:54 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5f303ecd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5f303ecd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:49:54 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58399d82] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26f96b85]
][2023-07-09 14:49:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
][2023-07-09 14:49:54 DEBUG SessionFactoryImpl:208 - Building session factory
][2023-07-09 14:49:54 DEBUG Settings:68 - SessionFactory name : null
][2023-07-09 14:49:54 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
][2023-07-09 14:49:54 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
][2023-07-09 14:49:54 DEBUG Settings:72 - Statistics: disabled
][2023-07-09 14:49:54 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
][2023-07-09 14:49:54 DEBUG Settings:75 - Default entity-mode: pojo
][2023-07-09 14:49:54 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
][2023-07-09 14:49:54 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
][2023-07-09 14:49:54 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
][2023-07-09 14:49:54 DEBUG Settings:80 - Default batch fetch size: -1
][2023-07-09 14:49:54 DEBUG Settings:81 - Maximum outer join fetch depth: null
][2023-07-09 14:49:54 DEBUG Settings:82 - Default null ordering: NONE
][2023-07-09 14:49:54 DEBUG Settings:83 - Order SQL updates by primary key: disabled
][2023-07-09 14:49:54 DEBUG Settings:84 - Order SQL inserts for batching: disabled
][2023-07-09 14:49:54 DEBUG Settings:86 - multi-tenancy strategy : NONE
][2023-07-09 14:49:54 DEBUG Settings:88 - JTA Track by Thread: enabled
][2023-07-09 14:49:54 DEBUG Settings:90 - Query language substitutions: {}
][2023-07-09 14:49:54 DEBUG Settings:91 - Named query checking : enabled
][2023-07-09 14:49:54 DEBUG Settings:93 - Second-level cache: disabled
][2023-07-09 14:49:54 DEBUG Settings:94 - Second-level query cache: disabled
][2023-07-09 14:49:54 DEBUG Settings:95 - Second-level query cache factory: null
][2023-07-09 14:49:54 DEBUG Settings:96 - Second-level cache region prefix: null
][2023-07-09 14:49:54 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
][2023-07-09 14:49:54 DEBUG Settings:98 - Structured second-level cache entries: disabled
][2023-07-09 14:49:54 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
][2023-07-09 14:49:54 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
][2023-07-09 14:49:54 DEBUG Settings:102 - JDBC batch size: 15
][2023-07-09 14:49:54 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
][2023-07-09 14:49:54 DEBUG Settings:104 - Scrollable result sets: enabled
][2023-07-09 14:49:54 DEBUG Settings:105 - Wrap result sets: disabled
][2023-07-09 14:49:54 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
][2023-07-09 14:49:54 DEBUG Settings:107 - JDBC result set fetch size: null
][2023-07-09 14:49:54 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
][2023-07-09 14:49:54 DEBUG Settings:109 - Generate SQL with comments: disabled
][2023-07-09 14:49:54 DEBUG Settings:111 - JPA compliance - query : disabled
][2023-07-09 14:49:54 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
][2023-07-09 14:49:54 DEBUG Settings:113 - JPA compliance - lists : disabled
][2023-07-09 14:49:54 DEBUG Settings:114 - JPA compliance - transactions : disabled
][2023-07-09 14:49:54 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:49:54 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:49:54 DEBUG SessionFactoryImpl:276 - Session factory constructed with filter configurations : {}
][2023-07-09 14:49:54 DEBUG SessionFactoryImpl:277 - Instantiating session factory with properties: {dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\test-classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\common\target\classes;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\vintage\junit-vintage-engine\5.9.3\junit-vintage-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\valerii.tarasov\.m2\repository\net\bytebuddy\byte-buddy\1.12.21\byte-buddy-1.12.21.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\valerii.tarasov\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\valerii.tarasov\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\valerii.tarasov\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\postgresql\1.16.0\postgresql-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\jdbc\1.16.0\jdbc-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\database-commons\1.16.0\database-commons-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\testcontainers\1.16.0\testcontainers-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\apache\commons\commons-compress\1.20\commons-compress-1.20.jar;C:\Users\valerii.tarasov\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-api\3.2.11\docker-java-api-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.11\docker-java-transport-zerodep-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport\3.2.11\docker-java-transport-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\net\java\dev\jna\jna\5.8.0\jna-5.8.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-reload4j\2.0.5\slf4j-reload4j-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Paris, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.val.integration.dao.UserDaoIT,makeDDL, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\valerii.tarasov, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Amazon Corretto\jdk17.0.6_10, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=pass, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=valerii.tarasov, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5433/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Corretto-17.0.6.10.1, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\VALERI~1.TAR\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service, os.arch=amd64, connection.username=postgres, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=org.postgresql.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@10c2064a, native.encoding=Cp1250, java.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\dotnet\;C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Python310\Scripts\;C:\Python310\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X64\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X86\;C:\Users\valerii.tarasov\workspace\apache-maven-3.8.6\bin;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\Notepad++;C:\Users\valerii.tarasov\Documents\cmsv_codecount\ncsl;C:\Program Files\TortoiseCVS;C:\Program Files\PowerShell\7\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\valerii.tarasov\terraform;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\valerii.tarasov\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\valerii.tarasov\AppData\Local\Microsoft\WindowsApps;C:\Users\valerii.tarasov\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\bin;;C:\Users\valerii.tarasov\AppData\Roaming\npm;C:\Users\valerii.tarasov\AppData\Local\GitHubDesktop\bin;C:\Program Files (x86)\CVSNT\;C:\Program Files\heroku\bin;C:\Users\valerii.tarasov\.dotnet\tools;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:postgresql://localhost:5433/postgres, java.class.version=61.0}
][2023-07-09 14:49:54 DEBUG JaccIntegrator:84 - Skipping JACC integration as it was not enabled
][2023-07-09 14:49:54 DEBUG SessionFactoryImpl:316 - Instantiated session factory
][2023-07-09 14:49:54 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58399d82] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1fba386c]
][2023-07-09 14:49:54 DEBUG SchemaManagementToolCoordinator:556 - No schema actions specified
][2023-07-09 14:49:54 DEBUG SchemaManagementToolCoordinator:69 - No actions specified; doing nothing
][2023-07-09 14:49:54 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
][2023-07-09 14:49:54 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
][2023-07-09 14:49:54 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:49:54 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:49:54 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:49:54 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2a03d65c
][2023-07-09 14:49:54 DEBUG NamedQueryRepository:171 - Checking 0 named HQL queries
][2023-07-09 14:49:54 DEBUG NamedQueryRepository:185 - Checking 0 named SQL queries
][2023-07-09 14:49:54 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c6b2dd9
][2023-07-09 14:49:54 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 7e20a612-7287-4827-9290-fa4b9ffc47bf (<unnamed>)
][2023-07-09 14:49:54 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
][2023-07-09 14:49:54 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
][2023-07-09 14:49:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
][2023-07-09 14:49:54 DEBUG TransactionImpl:81 - begin
][2023-07-09 14:49:54 DEBUG TransactionImpl:98 - committing
][2023-07-09 14:49:54 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
][2023-07-09 14:49:54 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
][2023-07-09 14:49:54 DEBUG SessionFactoryImpl:821 - HHH000031: Closing
][2023-07-09 14:49:54 DEBUG TypeConfiguration$Scope:345 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@64f1fd08] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1fba386c]
][2023-07-09 14:49:54 DEBUG AbstractServiceRegistryImpl:428 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
][2023-07-09 14:49:54 INFO  pooling:550 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:49:54 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
][2023-07-09 14:49:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
][2023-07-09 14:49:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
][2023-07-09 14:49:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
][2023-07-09 14:49:54 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
][2023-07-09 14:49:54 DEBUG LocalXmlResourceResolver:87 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
][2023-07-09 14:49:54 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
][2023-07-09 14:49:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
][2023-07-09 14:49:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
][2023-07-09 14:49:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
][2023-07-09 14:49:54 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
][2023-07-09 14:49:54 DEBUG LocalXmlResourceResolver:87 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
][2023-07-09 14:49:54 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
][2023-07-09 14:49:54 DEBUG Configuration:742 - Building session factory using internal StandardServiceRegistryBuilder
][2023-07-09 14:49:54 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
][2023-07-09 14:49:54 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
][2023-07-09 14:49:54 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
][2023-07-09 14:49:54 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52350abb
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ebd56e9
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f66e802
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35038141
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50305a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65f87a2c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e9658b5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@52eacb4b
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27f9e982
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@21680803
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2d8f2f3a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@1af7f54a
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@68ed96ca
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bdf6bb7
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3abd581e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3fabf088
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b85300e
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3db972d2
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1debc91c
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@687e4c93
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@181e72d3
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ec7bce0
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d272b0d
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3727f0ee
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c448433
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:49:54 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
][2023-07-09 14:49:54 WARN  pooling:75 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
][2023-07-09 14:49:54 INFO  pooling:119 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:49:54 INFO  pooling:125 - HHH10001001: Connection properties: {password=pass, user=postgres}
][2023-07-09 14:49:54 INFO  pooling:132 - HHH10001003: Autocommit mode: false
][2023-07-09 14:49:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
][2023-07-09 14:49:54 INFO  DriverManagerConnectionProviderImpl:322 - HHH000115: Hibernate connection pool size: 20 (min=1)
][2023-07-09 14:49:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 15.2 (Debian 15.2-1.pgdg110+1)
      major : 15
      minor : 2
][2023-07-09 14:49:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
][2023-07-09 14:49:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
][2023-07-09 14:49:54 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
][2023-07-09 14:49:54 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5f303ecd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5f303ecd
][2023-07-09 14:49:54 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:49:54 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10823d72] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cea0110]
][2023-07-09 14:49:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
][2023-07-09 14:49:54 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.User
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:49:54 DEBUG EntityBinder:431 - Import with entity name User
][2023-07-09 14:49:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=postgres, schema=payments}, physicalName=Name{catalog=postgres, schema=payments}]
][2023-07-09 14:49:54 DEBUG EntityBinder:874 - Bind entity org.val.entity.User on table users
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.User] is safe
][2023-07-09 14:49:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.User
][2023-07-09 14:49:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:49:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:id]
][2023-07-09 14:49:54 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.id (type=long)
][2023-07-09 14:49:54 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:49:54 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:49:54 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=accounts, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=accounts_key, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='accounts_KEY', referencedColumn='null', mappedBy='null'}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:49:54 DEBUG CollectionBinder:451 - Collection role: org.val.entity.User.accounts
][2023-07-09 14:49:54 DEBUG PropertyBinder:266 - Building property accounts
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property birthday with lazy=false
][2023-07-09 14:49:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:birthday]
][2023-07-09 14:49:54 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.birthday (type=org.val.entity.BirthDay)
][2023-07-09 14:49:54 DEBUG SimpleValueBinder:327 - Starting applyAttributeConverter [org.val.entity.User:birthday]
][2023-07-09 14:49:54 DEBUG SimpleValueBinder:410 - building SimpleValue for birthday
][2023-07-09 14:49:54 DEBUG PropertyBinder:266 - Building property birthday
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=email, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
][2023-07-09 14:49:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:email]
][2023-07-09 14:49:54 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.email (type=java.lang.String)
][2023-07-09 14:49:54 DEBUG SimpleValueBinder:410 - building SimpleValue for email
][2023-07-09 14:49:54 DEBUG PropertyBinder:266 - Building property email
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property gender with lazy=false
][2023-07-09 14:49:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:gender]
][2023-07-09 14:49:54 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.gender (type=org.val.entity.Gender)
][2023-07-09 14:49:54 DEBUG SimpleValueBinder:410 - building SimpleValue for gender
][2023-07-09 14:49:54 DEBUG PropertyBinder:266 - Building property gender
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=name, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
][2023-07-09 14:49:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:name]
][2023-07-09 14:49:54 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.name (type=java.lang.String)
][2023-07-09 14:49:54 DEBUG SimpleValueBinder:410 - building SimpleValue for name
][2023-07-09 14:49:54 DEBUG PropertyBinder:266 - Building property name
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=orders, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:54 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=orders_key, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:49:55 DEBUG CollectionBinder:451 - Collection role: org.val.entity.User.orders
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property orders
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=password, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:password]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.password (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for password
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property password
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=role, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property role
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=surname, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:surname]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.surname (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for surname
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property surname
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:userId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.userId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property userId
][2023-07-09 14:49:55 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Role
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:49:55 DEBUG EntityBinder:431 - Import with entity name Role
][2023-07-09 14:49:55 DEBUG EntityBinder:874 - Bind entity org.val.entity.Role on table roles
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Role] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Role
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:id]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.id (type=int)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:49:55 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:createdAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:deletedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=description, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:description]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.description (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for description
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property description
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=role, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property role with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:role]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.role (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for role
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property role
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:updatedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:49:55 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Account
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:49:55 DEBUG EntityBinder:431 - Import with entity name Account
][2023-07-09 14:49:55 DEBUG EntityBinder:874 - Bind entity org.val.entity.Account on table accounts
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Account] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Account
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:id]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.id (type=int)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:49:55 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=account_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property accountId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:accountId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.accountId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for accountId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property accountId
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=balance, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property balance with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:balance]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.balance (type=java.math.BigDecimal)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for balance
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property balance
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:createdAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=currency, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property currency with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:currency]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.currency (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for currency
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property currency
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:updatedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:userId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.userId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property userId
][2023-07-09 14:49:55 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Card
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:49:55 DEBUG EntityBinder:431 - Import with entity name Card
][2023-07-09 14:49:55 DEBUG EntityBinder:874 - Bind entity org.val.entity.Card on table cards
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Card] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Card
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:id]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.id (type=int)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:49:55 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=account_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property accountId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:accountId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.accountId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for accountId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property accountId
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=card_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property cardId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:cardId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.cardId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for cardId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property cardId
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property cardNumber with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:cardNumber]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.cardNumber (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for cardNumber
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property cardNumber
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:createdAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=cvv, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property cvv with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:cvv]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.cvv (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for cvv
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property cvv
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:deletedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=expiration_date, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expirationDate with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:expirationDate]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.expirationDate (type=java.sql.Date)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for expirationDate
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property expirationDate
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:updatedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:49:55 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Order
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:49:55 DEBUG EntityBinder:431 - Import with entity name Order
][2023-07-09 14:49:55 DEBUG EntityBinder:874 - Bind entity org.val.entity.Order on table orders
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Order] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Order
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:id]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.id (type=int)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:49:55 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:createdAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:deletedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property orderId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:orderId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.orderId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for orderId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property orderId
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property productId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:productId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.productId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for productId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property productId
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=status, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:status]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.status (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for status
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property status
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:updatedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:userId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.userId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property userId
][2023-07-09 14:49:55 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Product
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:49:55 DEBUG EntityBinder:431 - Import with entity name Product
][2023-07-09 14:49:55 DEBUG EntityBinder:874 - Bind entity org.val.entity.Product on table products
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Product] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Product
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:id]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.id (type=int)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:49:55 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:createdAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:deletedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=description, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:description]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.description (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for description
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property description
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=name, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:name]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.name (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for name
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property name
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=price, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:price]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.price (type=java.math.BigDecimal)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for price
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property price
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property productId with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:productId]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.productId (type=java.lang.String)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for productId
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property productId
][2023-07-09 14:49:55 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:49:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:49:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:updatedAt]
][2023-07-09 14:49:55 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for birthday
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:468 - Applying JPA AttributeConverter [org.hibernate.boot.model.convert.internal.InstanceBasedConverterDescriptor@6d6bbd35] to [org.val.entity.User:birthday]
][2023-07-09 14:49:55 DEBUG JavaTypeDescriptorRegistry:40 - Could not find matching scoped JavaTypeDescriptor for requested Java class [org.val.converter.BirthdayConverter]; falling back to static registry
][2023-07-09 14:49:55 DEBUG JavaTypeDescriptorRegistry:40 - Could not find matching scoped JavaTypeDescriptor for requested Java class [org.val.entity.BirthDay]; falling back to static registry
][2023-07-09 14:49:55 DEBUG JavaTypeDescriptorRegistry:127 - Could not find matching JavaTypeDescriptor for requested Java class [org.val.entity.BirthDay]; using fallback.  This means Hibernate does not know how to perform certain basic operations in relation to this Java type.
][2023-07-09 14:49:55 DEBUG JavaTypeDescriptorRegistry:40 - Could not find matching scoped JavaTypeDescriptor for requested Java class [java.sql.Date]; falling back to static registry
][2023-07-09 14:49:55 DEBUG AttributeConverterTypeAdapter:57 - Created AttributeConverterTypeAdapter -> converted::org.val.converter.BirthdayConverter
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for gender
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for surname
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for role
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for accountId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for balance
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for currency
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for accountId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for cardId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for cardNumber
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for cvv
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expirationDate
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for orderId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for productId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for price
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for productId
][2023-07-09 14:49:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:49:55 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
][2023-07-09 14:49:55 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
][2023-07-09 14:49:55 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
][2023-07-09 14:49:55 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [cards]
][2023-07-09 14:49:55 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [orders]
][2023-07-09 14:49:55 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [products]
][2023-07-09 14:49:55 DEBUG CollectionSecondPass:51 - Second pass for collection: org.val.entity.User.accounts
][2023-07-09 14:49:55 DEBUG CollectionBinder:930 - Binding a OneToMany: org.val.entity.User.accounts through a foreign key
][2023-07-09 14:49:55 DEBUG CollectionBinder:968 - Mapping collection: org.val.entity.User.accounts -> accounts
][2023-07-09 14:49:55 DEBUG TableBinder:554 - Retrieving property org.val.entity.Account.userId
][2023-07-09 14:49:55 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: org.val.entity.Account
][2023-07-09 14:49:55 DEBUG CollectionSecondPass:51 - Second pass for collection: org.val.entity.User.orders
][2023-07-09 14:49:55 DEBUG CollectionBinder:930 - Binding a OneToMany: org.val.entity.User.orders through a foreign key
][2023-07-09 14:49:55 DEBUG CollectionBinder:968 - Mapping collection: org.val.entity.User.orders -> orders
][2023-07-09 14:49:55 DEBUG TableBinder:554 - Retrieving property org.val.entity.Order.userId
][2023-07-09 14:49:55 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: org.val.entity.Order
][2023-07-09 14:49:55 DEBUG InFlightMetadataCollectorImpl:1796 - Resolving reference to class: org.val.entity.Role
][2023-07-09 14:49:55 DEBUG InFlightMetadataCollectorImpl:1796 - Resolving reference to class: org.val.entity.Role
][2023-07-09 14:49:55 DEBUG SessionFactoryImpl:208 - Building session factory
][2023-07-09 14:49:55 DEBUG Settings:68 - SessionFactory name : null
][2023-07-09 14:49:55 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
][2023-07-09 14:49:55 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
][2023-07-09 14:49:55 DEBUG Settings:72 - Statistics: disabled
][2023-07-09 14:49:55 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
][2023-07-09 14:49:55 DEBUG Settings:75 - Default entity-mode: pojo
][2023-07-09 14:49:55 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
][2023-07-09 14:49:55 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
][2023-07-09 14:49:55 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
][2023-07-09 14:49:55 DEBUG Settings:80 - Default batch fetch size: -1
][2023-07-09 14:49:55 DEBUG Settings:81 - Maximum outer join fetch depth: null
][2023-07-09 14:49:55 DEBUG Settings:82 - Default null ordering: NONE
][2023-07-09 14:49:55 DEBUG Settings:83 - Order SQL updates by primary key: disabled
][2023-07-09 14:49:55 DEBUG Settings:84 - Order SQL inserts for batching: disabled
][2023-07-09 14:49:55 DEBUG Settings:86 - multi-tenancy strategy : NONE
][2023-07-09 14:49:55 DEBUG Settings:88 - JTA Track by Thread: enabled
][2023-07-09 14:49:55 DEBUG Settings:90 - Query language substitutions: {}
][2023-07-09 14:49:55 DEBUG Settings:91 - Named query checking : enabled
][2023-07-09 14:49:55 DEBUG Settings:93 - Second-level cache: disabled
][2023-07-09 14:49:55 DEBUG Settings:94 - Second-level query cache: disabled
][2023-07-09 14:49:55 DEBUG Settings:95 - Second-level query cache factory: null
][2023-07-09 14:49:55 DEBUG Settings:96 - Second-level cache region prefix: null
][2023-07-09 14:49:55 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
][2023-07-09 14:49:55 DEBUG Settings:98 - Structured second-level cache entries: disabled
][2023-07-09 14:49:55 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
][2023-07-09 14:49:55 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
][2023-07-09 14:49:55 DEBUG Settings:102 - JDBC batch size: 15
][2023-07-09 14:49:55 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
][2023-07-09 14:49:55 DEBUG Settings:104 - Scrollable result sets: enabled
][2023-07-09 14:49:55 DEBUG Settings:105 - Wrap result sets: disabled
][2023-07-09 14:49:55 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
][2023-07-09 14:49:55 DEBUG Settings:107 - JDBC result set fetch size: null
][2023-07-09 14:49:55 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
][2023-07-09 14:49:55 DEBUG Settings:109 - Generate SQL with comments: disabled
][2023-07-09 14:49:55 DEBUG Settings:111 - JPA compliance - query : disabled
][2023-07-09 14:49:55 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
][2023-07-09 14:49:55 DEBUG Settings:113 - JPA compliance - lists : disabled
][2023-07-09 14:49:55 DEBUG Settings:114 - JPA compliance - transactions : disabled
][2023-07-09 14:49:55 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:49:55 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:49:55 DEBUG SessionFactoryImpl:276 - Session factory constructed with filter configurations : {}
][2023-07-09 14:49:55 DEBUG SessionFactoryImpl:277 - Instantiating session factory with properties: {dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\test-classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\common\target\classes;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\vintage\junit-vintage-engine\5.9.3\junit-vintage-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\valerii.tarasov\.m2\repository\net\bytebuddy\byte-buddy\1.12.21\byte-buddy-1.12.21.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\valerii.tarasov\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\valerii.tarasov\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\valerii.tarasov\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\postgresql\1.16.0\postgresql-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\jdbc\1.16.0\jdbc-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\database-commons\1.16.0\database-commons-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\testcontainers\1.16.0\testcontainers-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\apache\commons\commons-compress\1.20\commons-compress-1.20.jar;C:\Users\valerii.tarasov\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-api\3.2.11\docker-java-api-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.11\docker-java-transport-zerodep-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport\3.2.11\docker-java-transport-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\net\java\dev\jna\jna\5.8.0\jna-5.8.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-reload4j\2.0.5\slf4j-reload4j-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Paris, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.val.integration.dao.UserDaoIT,makeDDL, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\valerii.tarasov, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Amazon Corretto\jdk17.0.6_10, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=pass, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=valerii.tarasov, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5433/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Corretto-17.0.6.10.1, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\VALERI~1.TAR\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service, os.arch=amd64, connection.username=postgres, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=org.postgresql.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7b676112, native.encoding=Cp1250, java.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\dotnet\;C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Python310\Scripts\;C:\Python310\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X64\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X86\;C:\Users\valerii.tarasov\workspace\apache-maven-3.8.6\bin;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\Notepad++;C:\Users\valerii.tarasov\Documents\cmsv_codecount\ncsl;C:\Program Files\TortoiseCVS;C:\Program Files\PowerShell\7\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\valerii.tarasov\terraform;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\valerii.tarasov\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\valerii.tarasov\AppData\Local\Microsoft\WindowsApps;C:\Users\valerii.tarasov\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\bin;;C:\Users\valerii.tarasov\AppData\Roaming\npm;C:\Users\valerii.tarasov\AppData\Local\GitHubDesktop\bin;C:\Program Files (x86)\CVSNT\;C:\Program Files\heroku\bin;C:\Users\valerii.tarasov\.dotnet\tools;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:postgresql://localhost:5433/postgres, java.class.version=61.0}
][2023-07-09 14:49:55 DEBUG JaccIntegrator:84 - Skipping JACC integration as it was not enabled
][2023-07-09 14:49:55 DEBUG EnumType:126 - Using NAMED-based conversion for Enum org.val.entity.Gender
][2023-07-09 14:49:55 DEBUG SessionFactoryImpl:316 - Instantiated session factory
][2023-07-09 14:49:55 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10823d72] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c98781a]
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Order] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Order
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Product] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Product
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Card] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Card
][2023-07-09 14:49:55 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:49:55 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.User] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.User
][2023-07-09 14:49:55 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:49:55 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Account] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Account
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Role] is safe
][2023-07-09 14:49:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Role
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:687 - Static SQL for collection: org.val.entity.User.orders
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:689 -  Row insert: update payments.orders set user_id=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:692 -  Row update: update payments.orders set  where id=?
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:695 -  Row delete: update payments.orders set user_id=null where user_id=? and id=?
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:698 -  One-shot delete: update payments.orders set user_id=null where user_id=?
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:687 - Static SQL for collection: org.val.entity.User.accounts
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:689 -  Row insert: update payments.accounts set user_id=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:692 -  Row update: update payments.accounts set  where id=?
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:695 -  Row delete: update payments.accounts set user_id=null where user_id=? and id=?
][2023-07-09 14:49:55 DEBUG AbstractCollectionPersister:698 -  One-shot delete: update payments.accounts set user_id=null where user_id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Order
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.orders where id =?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select order_.id, order_.created_at as created_2_2_, order_.deleted_at as deleted_3_2_, order_.order_id as order_id4_2_, order_.product_id as product_5_2_, order_.status as status6_2_, order_.updated_at as updated_7_2_, order_.user_id as user_id8_2_ from payments.orders order_ where order_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.orders (created_at, deleted_at, order_id, product_id, status, updated_at, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.orders set created_at=?, deleted_at=?, order_id=?, product_id=?, status=?, updated_at=?, user_id=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.orders where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.orders (created_at, deleted_at, order_id, product_id, status, updated_at, user_id) values (?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b09715]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : orderId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : productId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Order)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Order, querySpaceUid=<gen:0>, path=org.val.entity.Order)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

][2023-07-09 14:49:55 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Order [NONE]: select order0_.id as id1_2_0_, order0_.created_at as created_2_2_0_, order0_.deleted_at as deleted_3_2_0_, order0_.order_id as order_id4_2_0_, order0_.product_id as product_5_2_0_, order0_.status as status6_2_0_, order0_.updated_at as updated_7_2_0_, order0_.user_id as user_id8_2_0_ from payments.orders order0_ where order0_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Product
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.products where id =?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select product_.id, product_.created_at as created_2_3_, product_.deleted_at as deleted_3_3_, product_.description as descript4_3_, product_.name as name5_3_, product_.price as price6_3_, product_.product_id as product_7_3_, product_.updated_at as updated_8_3_ from payments.products product_ where product_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.products (created_at, deleted_at, description, name, price, product_id, updated_at, id) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.products set created_at=?, deleted_at=?, description=?, name=?, price=?, product_id=?, updated_at=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.products where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.products (created_at, deleted_at, description, name, price, product_id, updated_at) values (?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469a7575]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : productId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Product)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Product, querySpaceUid=<gen:0>, path=org.val.entity.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

][2023-07-09 14:49:55 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Product [NONE]: select product0_.id as id1_3_0_, product0_.created_at as created_2_3_0_, product0_.deleted_at as deleted_3_3_0_, product0_.description as descript4_3_0_, product0_.name as name5_3_0_, product0_.price as price6_3_0_, product0_.product_id as product_7_3_0_, product0_.updated_at as updated_8_3_0_ from payments.products product0_ where product0_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Card
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.cards where id =?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select card_.id, card_.account_id as account_2_1_, card_.card_id as card_id3_1_, card_.card_number as card_num4_1_, card_.created_at as created_5_1_, card_.cvv as cvv6_1_, card_.deleted_at as deleted_7_1_, card_.expiration_date as expirati8_1_, card_.updated_at as updated_9_1_ from payments.cards card_ where card_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.cards (account_id, card_id, card_number, created_at, cvv, deleted_at, expiration_date, updated_at, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.cards set account_id=?, card_id=?, card_number=?, created_at=?, cvv=?, deleted_at=?, expiration_date=?, updated_at=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.cards where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.cards (account_id, card_id, card_number, created_at, cvv, deleted_at, expiration_date, updated_at) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f20f7ad]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accountId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cardId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cardNumber
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cvv
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expirationDate
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Card)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Card, querySpaceUid=<gen:0>, path=org.val.entity.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

][2023-07-09 14:49:55 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Card [NONE]: select card0_.id as id1_1_0_, card0_.account_id as account_2_1_0_, card0_.card_id as card_id3_1_0_, card0_.card_number as card_num4_1_0_, card0_.created_at as created_5_1_0_, card0_.cvv as cvv6_1_0_, card0_.deleted_at as deleted_7_1_0_, card0_.expiration_date as expirati8_1_0_, card0_.updated_at as updated_9_1_0_ from payments.cards card0_ where card0_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.User
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.users where id =?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select user_.id, user_.birthday as birthday2_5_, user_.email as email3_5_, user_.gender as gender4_5_, user_.name as name5_5_, user_.password as password6_5_, user_.role_id as role_id9_5_, user_.surname as surname7_5_, user_.user_id as user_id8_5_ from payments.users user_ where user_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.users (birthday, email, gender, name, password, role_id, surname, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.users set birthday=?, email=?, gender=?, name=?, password=?, role_id=?, surname=?, user_id=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.users where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.users (birthday, email, gender, name, password, role_id, surname, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5042e3d0]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4872669f]
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aeb0e2b]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : birthday
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : gender
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : orders
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13ed066e]
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d705112]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590765c4]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.deletedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.description
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.role
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.updatedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.User, querySpaceUid=<gen:0>, path=org.val.entity.User)
          - CollectionAttributeFetchImpl(collection=org.val.entity.User.accounts, querySpaceUid=<gen:1>, path=org.val.entity.User.accounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Account, querySpaceUid=<gen:2>, path=org.val.entity.User.accounts.<elements>)
          - CollectionAttributeFetchImpl(collection=org.val.entity.User.orders, querySpaceUid=<gen:3>, path=org.val.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Order, querySpaceUid=<gen:4>, path=org.val.entity.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=org.val.entity.Role, querySpaceUid=<gen:5>, path=org.val.entity.User.role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(role)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=org.val.entity.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

][2023-07-09 14:49:55 DEBUG EntityLoader:129 - Static select for entity org.val.entity.User [NONE]: select user0_.id as id1_5_0_, user0_.birthday as birthday2_5_0_, user0_.email as email3_5_0_, user0_.gender as gender4_5_0_, user0_.name as name5_5_0_, user0_.password as password6_5_0_, user0_.role_id as role_id9_5_0_, user0_.surname as surname7_5_0_, user0_.user_id as user_id8_5_0_, role1_.id as id1_4_1_, role1_.created_at as created_2_4_1_, role1_.deleted_at as deleted_3_4_1_, role1_.description as descript4_4_1_, role1_.role as role5_4_1_, role1_.updated_at as updated_6_4_1_ from payments.users user0_ left outer join payments.roles role1_ on user0_.role_id=role1_.id where user0_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Account
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.accounts where id =?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select account_.id, account_.account_id as account_2_0_, account_.balance as balance3_0_, account_.created_at as created_4_0_, account_.currency as currency5_0_, account_.updated_at as updated_6_0_, account_.user_id as user_id7_0_ from payments.accounts account_ where account_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.accounts (account_id, balance, created_at, currency, updated_at, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.accounts set account_id=?, balance=?, created_at=?, currency=?, updated_at=?, user_id=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.accounts where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.accounts (account_id, balance, created_at, currency, updated_at, user_id) values (?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3caafa67]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accountId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : balance
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : currency
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Account)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Account, querySpaceUid=<gen:0>, path=org.val.entity.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

][2023-07-09 14:49:55 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Account [NONE]: select account0_.id as id1_0_0_, account0_.account_id as account_2_0_0_, account0_.balance as balance3_0_0_, account0_.created_at as created_4_0_0_, account0_.currency as currency5_0_0_, account0_.updated_at as updated_6_0_0_, account0_.user_id as user_id7_0_0_ from payments.accounts account0_ where account0_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Role
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.roles where id =?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select role_.id, role_.created_at as created_2_4_, role_.deleted_at as deleted_3_4_, role_.description as descript4_4_, role_.role as role5_4_, role_.updated_at as updated_6_4_ from payments.roles role_ where role_.id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.roles (created_at, deleted_at, description, role, updated_at, id) values (?, ?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.roles set created_at=?, deleted_at=?, description=?, role=?, updated_at=? where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.roles where id=?
][2023-07-09 14:49:55 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.roles (created_at, deleted_at, description, role, updated_at) values (?, ?, ?, ?, ?)
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53747c4a]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Role, querySpaceUid=<gen:0>, path=org.val.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

][2023-07-09 14:49:55 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Role [NONE]: select role0_.id as id1_4_0_, role0_.created_at as created_2_4_0_, role0_.deleted_at as deleted_3_4_0_, role0_.description as descript4_4_0_, role0_.role as role5_4_0_, role0_.updated_at as updated_6_4_0_ from payments.roles role0_ where role0_.id=?
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42ea7565]
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5cc918]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : orderId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : productId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=org.val.entity.User.orders)
    - Returns
       - CollectionReturnImpl(collection=org.val.entity.User.orders, querySpaceUid=<gen:0>, path=[org.val.entity.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Order, querySpaceUid=<gen:1>, path=[org.val.entity.User.orders].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.val.entity.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.val.entity.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

][2023-07-09 14:49:55 DEBUG CollectionLoader:83 - Static select for collection org.val.entity.User.orders: select orders0_.user_id as user_id8_2_0_, orders0_.id as id1_2_0_, orders0_.id as id1_2_1_, orders0_.created_at as created_2_2_1_, orders0_.deleted_at as deleted_3_2_1_, orders0_.order_id as order_id4_2_1_, orders0_.product_id as product_5_2_1_, orders0_.status as status6_2_1_, orders0_.updated_at as updated_7_2_1_, orders0_.user_id as user_id8_2_1_ from payments.orders orders0_ where orders0_.user_id=?
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@151732fb]
][2023-07-09 14:49:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729c8063]
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accountId
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : balance
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : currency
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:49:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:49:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:49:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:49:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=org.val.entity.User.accounts)
    - Returns
       - CollectionReturnImpl(collection=org.val.entity.User.accounts, querySpaceUid=<gen:0>, path=[org.val.entity.User.accounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Account, querySpaceUid=<gen:1>, path=[org.val.entity.User.accounts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.val.entity.User.accounts)
          - SQL table alias mapping - accounts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.val.entity.Account)
                - SQL table alias mapping - accounts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

][2023-07-09 14:49:55 DEBUG CollectionLoader:83 - Static select for collection org.val.entity.User.accounts: select accounts0_.user_id as user_id7_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.account_id as account_2_0_1_, accounts0_.balance as balance3_0_1_, accounts0_.created_at as created_4_0_1_, accounts0_.currency as currency5_0_1_, accounts0_.updated_at as updated_6_0_1_, accounts0_.user_id as user_id7_0_1_ from payments.accounts accounts0_ where accounts0_.user_id=?
][2023-07-09 14:49:55 DEBUG SchemaManagementToolCoordinator:556 - No schema actions specified
][2023-07-09 14:49:55 DEBUG SchemaManagementToolCoordinator:69 - No actions specified; doing nothing
][2023-07-09 14:49:55 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
][2023-07-09 14:49:55 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
][2023-07-09 14:49:55 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:49:55 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:49:55 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:49:55 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2a03d65c
][2023-07-09 14:49:55 DEBUG NamedQueryRepository:171 - Checking 0 named HQL queries
][2023-07-09 14:49:55 DEBUG NamedQueryRepository:185 - Checking 0 named SQL queries
][2023-07-09 14:49:55 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 166b6a9b-506c-438d-a1b7-2e3e9232267b (<unnamed>)
][2023-07-09 14:49:55 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
][2023-07-09 14:49:55 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
][2023-07-09 14:49:55 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
][2023-07-09 14:49:55 DEBUG TransactionImpl:81 - begin
][2023-07-09 14:49:55 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
]java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.AbstractSharedSessionContract.buildQueryFromName(AbstractSharedSessionContract.java:923)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:902)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:114)
	at org.val.integration.IntegrationTestBase.makeDDL(IntegrationTestBase.java:132)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[2023-07-09 14:49:55 DEBUG SessionFactoryImpl:821 - HHH000031: Closing
][2023-07-09 14:49:55 DEBUG TypeConfiguration$Scope:345 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7fbd3e75] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3c98781a]
][2023-07-09 14:49:55 DEBUG AbstractServiceRegistryImpl:428 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
][2023-07-09 14:49:55 INFO  pooling:550 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:49:55 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
][2023-07-09 14:52:16 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
][2023-07-09 14:52:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
][2023-07-09 14:52:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
][2023-07-09 14:52:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
][2023-07-09 14:52:16 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.6.15.Final
][2023-07-09 14:52:16 DEBUG Environment:199 - HHH000206: hibernate.properties not found
][2023-07-09 14:52:16 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
][2023-07-09 14:52:16 DEBUG LocalXmlResourceResolver:87 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
][2023-07-09 14:52:16 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
][2023-07-09 14:52:17 DEBUG Configuration:742 - Building session factory using internal StandardServiceRegistryBuilder
][2023-07-09 14:52:17 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
][2023-07-09 14:52:17 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
][2023-07-09 14:52:17 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
][2023-07-09 14:52:17 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
][2023-07-09 14:52:17 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52350abb
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ebd56e9
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f66e802
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35038141
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50305a
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65f87a2c
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e9658b5
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@52eacb4b
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27f9e982
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@21680803
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2d8f2f3a
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@1af7f54a
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@68ed96ca
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bdf6bb7
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3abd581e
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3fabf088
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b85300e
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a23a01d
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4acf72b6
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7561db12
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3301500b
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24b52d3e
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15deb1dc
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e9c413e
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57a4d5ee
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:52:17 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
][2023-07-09 14:52:17 WARN  pooling:75 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
][2023-07-09 14:52:17 INFO  pooling:119 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:52:17 INFO  pooling:125 - HHH10001001: Connection properties: {password=pass, user=postgres}
][2023-07-09 14:52:17 INFO  pooling:132 - HHH10001003: Autocommit mode: false
][2023-07-09 14:52:17 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
][2023-07-09 14:52:17 INFO  DriverManagerConnectionProviderImpl:322 - HHH000115: Hibernate connection pool size: 20 (min=1)
][2023-07-09 14:52:17 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 15.2 (Debian 15.2-1.pgdg110+1)
      major : 15
      minor : 2
][2023-07-09 14:52:17 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
][2023-07-09 14:52:17 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
][2023-07-09 14:52:17 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
][2023-07-09 14:52:17 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4632cfc
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4632cfc
][2023-07-09 14:52:17 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:52:17 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@770b3be0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1eb6e1c]
][2023-07-09 14:52:17 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
][2023-07-09 14:52:17 DEBUG SessionFactoryImpl:208 - Building session factory
][2023-07-09 14:52:17 DEBUG Settings:68 - SessionFactory name : null
][2023-07-09 14:52:17 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
][2023-07-09 14:52:17 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
][2023-07-09 14:52:17 DEBUG Settings:72 - Statistics: disabled
][2023-07-09 14:52:17 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
][2023-07-09 14:52:17 DEBUG Settings:75 - Default entity-mode: pojo
][2023-07-09 14:52:17 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
][2023-07-09 14:52:17 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
][2023-07-09 14:52:17 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
][2023-07-09 14:52:17 DEBUG Settings:80 - Default batch fetch size: -1
][2023-07-09 14:52:17 DEBUG Settings:81 - Maximum outer join fetch depth: null
][2023-07-09 14:52:17 DEBUG Settings:82 - Default null ordering: NONE
][2023-07-09 14:52:17 DEBUG Settings:83 - Order SQL updates by primary key: disabled
][2023-07-09 14:52:17 DEBUG Settings:84 - Order SQL inserts for batching: disabled
][2023-07-09 14:52:17 DEBUG Settings:86 - multi-tenancy strategy : NONE
][2023-07-09 14:52:17 DEBUG Settings:88 - JTA Track by Thread: enabled
][2023-07-09 14:52:17 DEBUG Settings:90 - Query language substitutions: {}
][2023-07-09 14:52:17 DEBUG Settings:91 - Named query checking : enabled
][2023-07-09 14:52:17 DEBUG Settings:93 - Second-level cache: disabled
][2023-07-09 14:52:17 DEBUG Settings:94 - Second-level query cache: disabled
][2023-07-09 14:52:17 DEBUG Settings:95 - Second-level query cache factory: null
][2023-07-09 14:52:17 DEBUG Settings:96 - Second-level cache region prefix: null
][2023-07-09 14:52:17 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
][2023-07-09 14:52:17 DEBUG Settings:98 - Structured second-level cache entries: disabled
][2023-07-09 14:52:17 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
][2023-07-09 14:52:17 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
][2023-07-09 14:52:17 DEBUG Settings:102 - JDBC batch size: 15
][2023-07-09 14:52:17 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
][2023-07-09 14:52:17 DEBUG Settings:104 - Scrollable result sets: enabled
][2023-07-09 14:52:17 DEBUG Settings:105 - Wrap result sets: disabled
][2023-07-09 14:52:17 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
][2023-07-09 14:52:17 DEBUG Settings:107 - JDBC result set fetch size: null
][2023-07-09 14:52:17 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
][2023-07-09 14:52:17 DEBUG Settings:109 - Generate SQL with comments: disabled
][2023-07-09 14:52:17 DEBUG Settings:111 - JPA compliance - query : disabled
][2023-07-09 14:52:17 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
][2023-07-09 14:52:17 DEBUG Settings:113 - JPA compliance - lists : disabled
][2023-07-09 14:52:17 DEBUG Settings:114 - JPA compliance - transactions : disabled
][2023-07-09 14:52:18 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:52:18 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:276 - Session factory constructed with filter configurations : {}
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:277 - Instantiating session factory with properties: {dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\test-classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\common\target\classes;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\vintage\junit-vintage-engine\5.9.3\junit-vintage-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\valerii.tarasov\.m2\repository\net\bytebuddy\byte-buddy\1.12.21\byte-buddy-1.12.21.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\valerii.tarasov\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\valerii.tarasov\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\valerii.tarasov\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\postgresql\1.16.0\postgresql-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\jdbc\1.16.0\jdbc-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\database-commons\1.16.0\database-commons-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\testcontainers\1.16.0\testcontainers-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\apache\commons\commons-compress\1.20\commons-compress-1.20.jar;C:\Users\valerii.tarasov\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-api\3.2.11\docker-java-api-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.11\docker-java-transport-zerodep-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport\3.2.11\docker-java-transport-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\net\java\dev\jna\jna\5.8.0\jna-5.8.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-reload4j\2.0.5\slf4j-reload4j-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Paris, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.val.integration.dao.UserDaoIT,makeDDL, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\valerii.tarasov, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Amazon Corretto\jdk17.0.6_10, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=pass, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=valerii.tarasov, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5433/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Corretto-17.0.6.10.1, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\VALERI~1.TAR\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service, os.arch=amd64, connection.username=postgres, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=org.postgresql.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45667d98, native.encoding=Cp1250, java.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\dotnet\;C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Python310\Scripts\;C:\Python310\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X64\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X86\;C:\Users\valerii.tarasov\workspace\apache-maven-3.8.6\bin;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\Notepad++;C:\Users\valerii.tarasov\Documents\cmsv_codecount\ncsl;C:\Program Files\TortoiseCVS;C:\Program Files\PowerShell\7\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\valerii.tarasov\terraform;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\valerii.tarasov\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\valerii.tarasov\AppData\Local\Microsoft\WindowsApps;C:\Users\valerii.tarasov\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\bin;;C:\Users\valerii.tarasov\AppData\Roaming\npm;C:\Users\valerii.tarasov\AppData\Local\GitHubDesktop\bin;C:\Program Files (x86)\CVSNT\;C:\Program Files\heroku\bin;C:\Users\valerii.tarasov\.dotnet\tools;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:postgresql://localhost:5433/postgres, java.class.version=61.0}
][2023-07-09 14:52:18 DEBUG JaccIntegrator:84 - Skipping JACC integration as it was not enabled
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:316 - Instantiated session factory
][2023-07-09 14:52:18 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@770b3be0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@771d1ffb]
][2023-07-09 14:52:18 DEBUG SchemaManagementToolCoordinator:556 - No schema actions specified
][2023-07-09 14:52:18 DEBUG SchemaManagementToolCoordinator:69 - No actions specified; doing nothing
][2023-07-09 14:52:18 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
][2023-07-09 14:52:18 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
][2023-07-09 14:52:18 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:52:18 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:52:18 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:52:18 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@571a9686
][2023-07-09 14:52:18 DEBUG NamedQueryRepository:171 - Checking 0 named HQL queries
][2023-07-09 14:52:18 DEBUG NamedQueryRepository:185 - Checking 0 named SQL queries
][2023-07-09 14:52:18 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6bbe50c9
][2023-07-09 14:52:18 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: d1fa20bb-0bdb-4253-a6b8-a111311e2425 (<unnamed>)
][2023-07-09 14:52:18 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
][2023-07-09 14:52:18 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
][2023-07-09 14:52:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
][2023-07-09 14:52:18 DEBUG TransactionImpl:81 - begin
][2023-07-09 14:52:18 DEBUG TransactionImpl:98 - committing
][2023-07-09 14:52:18 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
][2023-07-09 14:52:18 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:821 - HHH000031: Closing
][2023-07-09 14:52:18 DEBUG TypeConfiguration$Scope:345 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5a2bd7c8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@771d1ffb]
][2023-07-09 14:52:18 DEBUG AbstractServiceRegistryImpl:428 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
][2023-07-09 14:52:18 INFO  pooling:550 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:52:18 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
][2023-07-09 14:52:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
][2023-07-09 14:52:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
][2023-07-09 14:52:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
][2023-07-09 14:52:18 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
][2023-07-09 14:52:18 DEBUG LocalXmlResourceResolver:87 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
][2023-07-09 14:52:18 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
][2023-07-09 14:52:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
][2023-07-09 14:52:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
][2023-07-09 14:52:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
][2023-07-09 14:52:18 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
][2023-07-09 14:52:18 DEBUG LocalXmlResourceResolver:87 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
][2023-07-09 14:52:18 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
][2023-07-09 14:52:18 DEBUG Configuration:742 - Building session factory using internal StandardServiceRegistryBuilder
][2023-07-09 14:52:18 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
][2023-07-09 14:52:18 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
][2023-07-09 14:52:18 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
][2023-07-09 14:52:18 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@226f885f
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52350abb
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ebd56e9
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f66e802
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ca17ab0
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d411036
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d373bcf
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c00fff0
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a9419d7
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21a5fd96
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3676ac27
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ca65ce4
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35038141
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50305a
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bc28a83
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d2e40b
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d8445d7
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@29ad44e3
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@14bb2297
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5bd1ceca
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2db2cd5
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48e64352
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f8908f6
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fdfa676
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1734f68
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@425357dd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65f87a2c
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31c269fd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e9658b5
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@52eacb4b
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cc0bcf6
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3dddbe65
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@251f7d26
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60d84f61
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27f9e982
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@29caf222
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1804f60d
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@21680803
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2d8f2f3a
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@58dea0a5
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5167268
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@1af7f54a
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@68ed96ca
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58783f6c
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bdf6bb7
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7577b641
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@33c2bd
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3abd581e
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3fabf088
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b85300e
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a7704c
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@78226c36
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3f685162
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11f406f8
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@987455b
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@622fdb81
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f3165e7
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ec3633f
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d5d5621
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
][2023-07-09 14:52:18 DEBUG DefaultIdentifierGeneratorFactory:98 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
][2023-07-09 14:52:18 WARN  pooling:75 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
][2023-07-09 14:52:18 INFO  pooling:119 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:52:18 INFO  pooling:125 - HHH10001001: Connection properties: {password=pass, user=postgres}
][2023-07-09 14:52:18 INFO  pooling:132 - HHH10001003: Autocommit mode: false
][2023-07-09 14:52:18 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
][2023-07-09 14:52:18 INFO  DriverManagerConnectionProviderImpl:322 - HHH000115: Hibernate connection pool size: 20 (min=1)
][2023-07-09 14:52:18 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 15.2 (Debian 15.2-1.pgdg110+1)
      major : 15
      minor : 2
][2023-07-09 14:52:18 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
][2023-07-09 14:52:18 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
][2023-07-09 14:52:18 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
][2023-07-09 14:52:18 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4632cfc
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4632cfc
][2023-07-09 14:52:18 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2575f671
][2023-07-09 14:52:18 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684b31de] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6b52dd31]
][2023-07-09 14:52:18 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
][2023-07-09 14:52:18 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.User
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:52:18 DEBUG EntityBinder:431 - Import with entity name User
][2023-07-09 14:52:18 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=postgres, schema=payments}, physicalName=Name{catalog=postgres, schema=payments}]
][2023-07-09 14:52:18 DEBUG EntityBinder:874 - Bind entity org.val.entity.User on table users
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.User] is safe
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.User
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:id]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.id (type=long)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:52:18 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=accounts, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=accounts_key, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='accounts_KEY', referencedColumn='null', mappedBy='null'}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:52:18 DEBUG CollectionBinder:451 - Collection role: org.val.entity.User.accounts
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property accounts
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property birthday with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:birthday]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.birthday (type=org.val.entity.BirthDay)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:327 - Starting applyAttributeConverter [org.val.entity.User:birthday]
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for birthday
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property birthday
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=email, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:email]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.email (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for email
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property email
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property gender with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:gender]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.gender (type=org.val.entity.Gender)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for gender
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property gender
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=name, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:name]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.name (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for name
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property name
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=orders, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=orders_key, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userId'}
][2023-07-09 14:52:18 DEBUG CollectionBinder:451 - Collection role: org.val.entity.User.orders
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property orders
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=password, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:password]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.password (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for password
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property password
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=role, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property role
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=surname, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:surname]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.surname (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for surname
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property surname
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.User:userId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.User.userId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property userId
][2023-07-09 14:52:18 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Role
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:52:18 DEBUG EntityBinder:431 - Import with entity name Role
][2023-07-09 14:52:18 DEBUG EntityBinder:874 - Bind entity org.val.entity.Role on table roles
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Role] is safe
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Role
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:id]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.id (type=int)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:52:18 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:createdAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:deletedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=description, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:description]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.description (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for description
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property description
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=role, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property role with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:role]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.role (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for role
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property role
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.roles), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Role:updatedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Role.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:52:18 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Account
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:52:18 DEBUG EntityBinder:431 - Import with entity name Account
][2023-07-09 14:52:18 DEBUG EntityBinder:874 - Bind entity org.val.entity.Account on table accounts
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Account] is safe
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Account
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:id]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.id (type=int)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:52:18 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=account_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property accountId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:accountId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.accountId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for accountId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property accountId
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=balance, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property balance with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:balance]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.balance (type=java.math.BigDecimal)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for balance
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property balance
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:createdAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=currency, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property currency with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:currency]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.currency (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for currency
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property currency
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:updatedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.accounts), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Account:userId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Account.userId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property userId
][2023-07-09 14:52:18 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Card
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:52:18 DEBUG EntityBinder:431 - Import with entity name Card
][2023-07-09 14:52:18 DEBUG EntityBinder:874 - Bind entity org.val.entity.Card on table cards
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Card] is safe
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Card
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:id]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.id (type=int)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:52:18 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=account_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property accountId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:accountId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.accountId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for accountId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property accountId
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=card_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property cardId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:cardId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.cardId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for cardId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property cardId
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property cardNumber with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:cardNumber]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.cardNumber (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for cardNumber
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property cardNumber
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:createdAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=cvv, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property cvv with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:cvv]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.cvv (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for cvv
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property cvv
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:deletedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=expiration_date, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expirationDate with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:expirationDate]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.expirationDate (type=java.sql.Date)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for expirationDate
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property expirationDate
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.cards), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Card:updatedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Card.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:52:18 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Order
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:52:18 DEBUG EntityBinder:431 - Import with entity name Order
][2023-07-09 14:52:18 DEBUG EntityBinder:874 - Bind entity org.val.entity.Order on table orders
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Order] is safe
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Order
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:id]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.id (type=int)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:52:18 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:createdAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:deletedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property orderId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:orderId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.orderId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for orderId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property orderId
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property productId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:productId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.productId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for productId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property productId
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=status, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:status]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.status (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for status
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property status
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:updatedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.orders), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Order:userId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Order.userId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property userId
][2023-07-09 14:52:18 DEBUG AnnotationBinder:547 - Binding entity from annotated class: org.val.entity.Product
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
][2023-07-09 14:52:18 DEBUG EntityBinder:431 - Import with entity name Product
][2023-07-09 14:52:18 DEBUG EntityBinder:874 - Bind entity org.val.entity.Product on table products
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Product] is safe
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Product
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:id]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.id (type=int)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for id
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property id
][2023-07-09 14:52:18 DEBUG BinderHelper:514 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createdAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:createdAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.createdAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property createdAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=deleted_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property deletedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:deletedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.deletedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property deletedAt
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=description, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:description]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.description (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for description
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property description
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=name, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:name]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.name (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for name
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property name
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=price, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:price]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.price (type=java.math.BigDecimal)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for price
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property price
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property productId with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:productId]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.productId (type=java.lang.String)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for productId
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property productId
][2023-07-09 14:52:18 DEBUG Ejb3Column:227 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(postgres.payments.products), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
][2023-07-09 14:52:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updatedAt with lazy=false
][2023-07-09 14:52:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [org.val.entity.Product:updatedAt]
][2023-07-09 14:52:18 DEBUG AttributeConverterManager:99 - Checking auto-apply AttributeConverter [org.val.converter.BirthdayConverter] (domain-type=Lorg/val/entity/BirthDay;) for match against basic attribute : org.val.entity.Product.updatedAt (type=java.sql.Timestamp)
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:410 - building SimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG PropertyBinder:266 - Building property updatedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for birthday
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:468 - Applying JPA AttributeConverter [org.hibernate.boot.model.convert.internal.InstanceBasedConverterDescriptor@2d3ef181] to [org.val.entity.User:birthday]
][2023-07-09 14:52:18 DEBUG JavaTypeDescriptorRegistry:40 - Could not find matching scoped JavaTypeDescriptor for requested Java class [org.val.converter.BirthdayConverter]; falling back to static registry
][2023-07-09 14:52:18 DEBUG JavaTypeDescriptorRegistry:40 - Could not find matching scoped JavaTypeDescriptor for requested Java class [org.val.entity.BirthDay]; falling back to static registry
][2023-07-09 14:52:18 DEBUG JavaTypeDescriptorRegistry:127 - Could not find matching JavaTypeDescriptor for requested Java class [org.val.entity.BirthDay]; using fallback.  This means Hibernate does not know how to perform certain basic operations in relation to this Java type.
][2023-07-09 14:52:18 DEBUG JavaTypeDescriptorRegistry:40 - Could not find matching scoped JavaTypeDescriptor for requested Java class [java.sql.Date]; falling back to static registry
][2023-07-09 14:52:18 DEBUG AttributeConverterTypeAdapter:57 - Created AttributeConverterTypeAdapter -> converted::org.val.converter.BirthdayConverter
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for gender
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for surname
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for role
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for accountId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for balance
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for currency
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for accountId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for cardId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for cardNumber
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for cvv
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expirationDate
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for orderId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for productId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for createdAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for deletedAt
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for price
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for productId
][2023-07-09 14:52:18 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for updatedAt
][2023-07-09 14:52:18 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
][2023-07-09 14:52:18 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
][2023-07-09 14:52:18 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
][2023-07-09 14:52:18 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [cards]
][2023-07-09 14:52:18 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [orders]
][2023-07-09 14:52:18 DEBUG PrimaryKey:36 - Forcing column [id] to be non-null as it is part of the primary key for table [products]
][2023-07-09 14:52:18 DEBUG CollectionSecondPass:51 - Second pass for collection: org.val.entity.User.accounts
][2023-07-09 14:52:18 DEBUG CollectionBinder:930 - Binding a OneToMany: org.val.entity.User.accounts through a foreign key
][2023-07-09 14:52:18 DEBUG CollectionBinder:968 - Mapping collection: org.val.entity.User.accounts -> accounts
][2023-07-09 14:52:18 DEBUG TableBinder:554 - Retrieving property org.val.entity.Account.userId
][2023-07-09 14:52:18 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: org.val.entity.Account
][2023-07-09 14:52:18 DEBUG CollectionSecondPass:51 - Second pass for collection: org.val.entity.User.orders
][2023-07-09 14:52:18 DEBUG CollectionBinder:930 - Binding a OneToMany: org.val.entity.User.orders through a foreign key
][2023-07-09 14:52:18 DEBUG CollectionBinder:968 - Mapping collection: org.val.entity.User.orders -> orders
][2023-07-09 14:52:18 DEBUG TableBinder:554 - Retrieving property org.val.entity.Order.userId
][2023-07-09 14:52:18 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: org.val.entity.Order
][2023-07-09 14:52:18 DEBUG InFlightMetadataCollectorImpl:1796 - Resolving reference to class: org.val.entity.Role
][2023-07-09 14:52:18 DEBUG InFlightMetadataCollectorImpl:1796 - Resolving reference to class: org.val.entity.Role
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:208 - Building session factory
][2023-07-09 14:52:18 DEBUG Settings:68 - SessionFactory name : null
][2023-07-09 14:52:18 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
][2023-07-09 14:52:18 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
][2023-07-09 14:52:18 DEBUG Settings:72 - Statistics: disabled
][2023-07-09 14:52:18 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
][2023-07-09 14:52:18 DEBUG Settings:75 - Default entity-mode: pojo
][2023-07-09 14:52:18 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
][2023-07-09 14:52:18 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
][2023-07-09 14:52:18 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
][2023-07-09 14:52:18 DEBUG Settings:80 - Default batch fetch size: -1
][2023-07-09 14:52:18 DEBUG Settings:81 - Maximum outer join fetch depth: null
][2023-07-09 14:52:18 DEBUG Settings:82 - Default null ordering: NONE
][2023-07-09 14:52:18 DEBUG Settings:83 - Order SQL updates by primary key: disabled
][2023-07-09 14:52:18 DEBUG Settings:84 - Order SQL inserts for batching: disabled
][2023-07-09 14:52:18 DEBUG Settings:86 - multi-tenancy strategy : NONE
][2023-07-09 14:52:18 DEBUG Settings:88 - JTA Track by Thread: enabled
][2023-07-09 14:52:18 DEBUG Settings:90 - Query language substitutions: {}
][2023-07-09 14:52:18 DEBUG Settings:91 - Named query checking : enabled
][2023-07-09 14:52:18 DEBUG Settings:93 - Second-level cache: disabled
][2023-07-09 14:52:18 DEBUG Settings:94 - Second-level query cache: disabled
][2023-07-09 14:52:18 DEBUG Settings:95 - Second-level query cache factory: null
][2023-07-09 14:52:18 DEBUG Settings:96 - Second-level cache region prefix: null
][2023-07-09 14:52:18 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
][2023-07-09 14:52:18 DEBUG Settings:98 - Structured second-level cache entries: disabled
][2023-07-09 14:52:18 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
][2023-07-09 14:52:18 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
][2023-07-09 14:52:18 DEBUG Settings:102 - JDBC batch size: 15
][2023-07-09 14:52:18 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
][2023-07-09 14:52:18 DEBUG Settings:104 - Scrollable result sets: enabled
][2023-07-09 14:52:18 DEBUG Settings:105 - Wrap result sets: disabled
][2023-07-09 14:52:18 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
][2023-07-09 14:52:18 DEBUG Settings:107 - JDBC result set fetch size: null
][2023-07-09 14:52:18 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
][2023-07-09 14:52:18 DEBUG Settings:109 - Generate SQL with comments: disabled
][2023-07-09 14:52:18 DEBUG Settings:111 - JPA compliance - query : disabled
][2023-07-09 14:52:18 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
][2023-07-09 14:52:18 DEBUG Settings:113 - JPA compliance - lists : disabled
][2023-07-09 14:52:18 DEBUG Settings:114 - JPA compliance - transactions : disabled
][2023-07-09 14:52:18 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:52:18 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:276 - Session factory constructed with filter configurations : {}
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:277 - Instantiating session factory with properties: {dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\test-classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service\target\classes;C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\common\target\classes;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\junit\vintage\junit-vintage-engine\5.9.3\junit-vintage-engine-5.9.3.jar;C:\Users\valerii.tarasov\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\valerii.tarasov\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\valerii.tarasov\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\valerii.tarasov\.m2\repository\net\bytebuddy\byte-buddy\1.12.21\byte-buddy-1.12.21.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\valerii.tarasov\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\valerii.tarasov\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\valerii.tarasov\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\valerii.tarasov\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\valerii.tarasov\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\valerii.tarasov\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\postgresql\1.16.0\postgresql-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\jdbc\1.16.0\jdbc-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\database-commons\1.16.0\database-commons-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\testcontainers\testcontainers\1.16.0\testcontainers-1.16.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\apache\commons\commons-compress\1.20\commons-compress-1.20.jar;C:\Users\valerii.tarasov\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-api\3.2.11\docker-java-api-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.11\docker-java-transport-zerodep-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\com\github\docker-java\docker-java-transport\3.2.11\docker-java-transport-3.2.11.jar;C:\Users\valerii.tarasov\.m2\repository\net\java\dev\jna\jna\5.8.0\jna-5.8.0.jar;C:\Users\valerii.tarasov\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-reload4j\2.0.5\slf4j-reload4j-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\valerii.tarasov\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Paris, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.val.integration.dao.UserDaoIT,makeDDL, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\valerii.tarasov, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Amazon Corretto\jdk17.0.6_10, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, connection.password=pass, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=valerii.tarasov, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5433/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Corretto-17.0.6.10.1, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\VALERI~1.TAR\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\valerii.tarasov\IdeaProjects\payment-system-project\service, os.arch=amd64, connection.username=postgres, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=org.postgresql.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2975a9e, native.encoding=Cp1250, java.library.path=C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\dotnet\;C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Python310\Scripts\;C:\Python310\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X64\;C:\Program Files (x86)\Pulse Secure\VC142.CRT\X86\;C:\Users\valerii.tarasov\workspace\apache-maven-3.8.6\bin;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\Notepad++;C:\Users\valerii.tarasov\Documents\cmsv_codecount\ncsl;C:\Program Files\TortoiseCVS;C:\Program Files\PowerShell\7\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\valerii.tarasov\terraform;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\valerii.tarasov\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\valerii.tarasov\AppData\Local\Microsoft\WindowsApps;C:\Users\valerii.tarasov\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.1\bin;;C:\Users\valerii.tarasov\AppData\Roaming\npm;C:\Users\valerii.tarasov\AppData\Local\GitHubDesktop\bin;C:\Program Files (x86)\CVSNT\;C:\Program Files\heroku\bin;C:\Users\valerii.tarasov\.dotnet\tools;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:postgresql://localhost:5433/postgres, java.class.version=61.0}
][2023-07-09 14:52:18 DEBUG JaccIntegrator:84 - Skipping JACC integration as it was not enabled
][2023-07-09 14:52:18 DEBUG EnumType:126 - Using NAMED-based conversion for Enum org.val.entity.Gender
][2023-07-09 14:52:18 DEBUG SessionFactoryImpl:316 - Instantiated session factory
][2023-07-09 14:52:18 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684b31de] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6fa13e6]
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Order] is safe
][2023-07-09 14:52:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Order
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Product] is safe
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Product
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Card] is safe
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Card
][2023-07-09 14:52:19 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:52:19 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.User] is safe
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.User
][2023-07-09 14:52:19 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:52:19 DEBUG interceptor:46 - To-one property `org.val.entity.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Account] is safe
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Account
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.val.entity.Role] is safe
][2023-07-09 14:52:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.val.entity.Role
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:687 - Static SQL for collection: org.val.entity.User.orders
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:689 -  Row insert: update payments.orders set user_id=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:692 -  Row update: update payments.orders set  where id=?
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:695 -  Row delete: update payments.orders set user_id=null where user_id=? and id=?
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:698 -  One-shot delete: update payments.orders set user_id=null where user_id=?
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:687 - Static SQL for collection: org.val.entity.User.accounts
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:689 -  Row insert: update payments.accounts set user_id=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:692 -  Row update: update payments.accounts set  where id=?
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:695 -  Row delete: update payments.accounts set user_id=null where user_id=? and id=?
][2023-07-09 14:52:19 DEBUG AbstractCollectionPersister:698 -  One-shot delete: update payments.accounts set user_id=null where user_id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Order
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.orders where id =?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select order_.id, order_.created_at as created_2_2_, order_.deleted_at as deleted_3_2_, order_.order_id as order_id4_2_, order_.product_id as product_5_2_, order_.status as status6_2_, order_.updated_at as updated_7_2_, order_.user_id as user_id8_2_ from payments.orders order_ where order_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.orders (created_at, deleted_at, order_id, product_id, status, updated_at, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.orders set created_at=?, deleted_at=?, order_id=?, product_id=?, status=?, updated_at=?, user_id=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.orders where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.orders (created_at, deleted_at, order_id, product_id, status, updated_at, user_id) values (?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ff6a49]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : orderId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : productId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Order)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Order, querySpaceUid=<gen:0>, path=org.val.entity.Order)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

][2023-07-09 14:52:19 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Order [NONE]: select order0_.id as id1_2_0_, order0_.created_at as created_2_2_0_, order0_.deleted_at as deleted_3_2_0_, order0_.order_id as order_id4_2_0_, order0_.product_id as product_5_2_0_, order0_.status as status6_2_0_, order0_.updated_at as updated_7_2_0_, order0_.user_id as user_id8_2_0_ from payments.orders order0_ where order0_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Product
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.products where id =?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select product_.id, product_.created_at as created_2_3_, product_.deleted_at as deleted_3_3_, product_.description as descript4_3_, product_.name as name5_3_, product_.price as price6_3_, product_.product_id as product_7_3_, product_.updated_at as updated_8_3_ from payments.products product_ where product_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.products (created_at, deleted_at, description, name, price, product_id, updated_at, id) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.products set created_at=?, deleted_at=?, description=?, name=?, price=?, product_id=?, updated_at=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.products where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.products (created_at, deleted_at, description, name, price, product_id, updated_at) values (?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bf26df]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : productId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Product)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Product, querySpaceUid=<gen:0>, path=org.val.entity.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

][2023-07-09 14:52:19 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Product [NONE]: select product0_.id as id1_3_0_, product0_.created_at as created_2_3_0_, product0_.deleted_at as deleted_3_3_0_, product0_.description as descript4_3_0_, product0_.name as name5_3_0_, product0_.price as price6_3_0_, product0_.product_id as product_7_3_0_, product0_.updated_at as updated_8_3_0_ from payments.products product0_ where product0_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Card
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.cards where id =?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select card_.id, card_.account_id as account_2_1_, card_.card_id as card_id3_1_, card_.card_number as card_num4_1_, card_.created_at as created_5_1_, card_.cvv as cvv6_1_, card_.deleted_at as deleted_7_1_, card_.expiration_date as expirati8_1_, card_.updated_at as updated_9_1_ from payments.cards card_ where card_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.cards (account_id, card_id, card_number, created_at, cvv, deleted_at, expiration_date, updated_at, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.cards set account_id=?, card_id=?, card_number=?, created_at=?, cvv=?, deleted_at=?, expiration_date=?, updated_at=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.cards where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.cards (account_id, card_id, card_number, created_at, cvv, deleted_at, expiration_date, updated_at) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9e08d4]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accountId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cardId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cardNumber
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cvv
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expirationDate
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Card)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Card, querySpaceUid=<gen:0>, path=org.val.entity.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

][2023-07-09 14:52:19 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Card [NONE]: select card0_.id as id1_1_0_, card0_.account_id as account_2_1_0_, card0_.card_id as card_id3_1_0_, card0_.card_number as card_num4_1_0_, card0_.created_at as created_5_1_0_, card0_.cvv as cvv6_1_0_, card0_.deleted_at as deleted_7_1_0_, card0_.expiration_date as expirati8_1_0_, card0_.updated_at as updated_9_1_0_ from payments.cards card0_ where card0_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.User
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.users where id =?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select user_.id, user_.birthday as birthday2_5_, user_.email as email3_5_, user_.gender as gender4_5_, user_.name as name5_5_, user_.password as password6_5_, user_.role_id as role_id9_5_, user_.surname as surname7_5_, user_.user_id as user_id8_5_ from payments.users user_ where user_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.users (birthday, email, gender, name, password, role_id, surname, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.users set birthday=?, email=?, gender=?, name=?, password=?, role_id=?, surname=?, user_id=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.users where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.users (birthday, email, gender, name, password, role_id, surname, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@704067c6]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4293e066]
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78da899f]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : birthday
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : gender
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : orders
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4872669f]
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@483f286e]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb147ec]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.deletedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.description
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.role
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role.updatedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.User, querySpaceUid=<gen:0>, path=org.val.entity.User)
          - CollectionAttributeFetchImpl(collection=org.val.entity.User.accounts, querySpaceUid=<gen:1>, path=org.val.entity.User.accounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Account, querySpaceUid=<gen:2>, path=org.val.entity.User.accounts.<elements>)
          - CollectionAttributeFetchImpl(collection=org.val.entity.User.orders, querySpaceUid=<gen:3>, path=org.val.entity.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Order, querySpaceUid=<gen:4>, path=org.val.entity.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=org.val.entity.Role, querySpaceUid=<gen:5>, path=org.val.entity.User.role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(role)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=org.val.entity.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

][2023-07-09 14:52:19 DEBUG EntityLoader:129 - Static select for entity org.val.entity.User [NONE]: select user0_.id as id1_5_0_, user0_.birthday as birthday2_5_0_, user0_.email as email3_5_0_, user0_.gender as gender4_5_0_, user0_.name as name5_5_0_, user0_.password as password6_5_0_, user0_.role_id as role_id9_5_0_, user0_.surname as surname7_5_0_, user0_.user_id as user_id8_5_0_, role1_.id as id1_4_1_, role1_.created_at as created_2_4_1_, role1_.deleted_at as deleted_3_4_1_, role1_.description as descript4_4_1_, role1_.role as role5_4_1_, role1_.updated_at as updated_6_4_1_ from payments.users user0_ left outer join payments.roles role1_ on user0_.role_id=role1_.id where user0_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Account
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.accounts where id =?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select account_.id, account_.account_id as account_2_0_, account_.balance as balance3_0_, account_.created_at as created_4_0_, account_.currency as currency5_0_, account_.updated_at as updated_6_0_, account_.user_id as user_id7_0_ from payments.accounts account_ where account_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.accounts (account_id, balance, created_at, currency, updated_at, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.accounts set account_id=?, balance=?, created_at=?, currency=?, updated_at=?, user_id=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.accounts where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.accounts (account_id, balance, created_at, currency, updated_at, user_id) values (?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d705112]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accountId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : balance
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : currency
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Account)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Account, querySpaceUid=<gen:0>, path=org.val.entity.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

][2023-07-09 14:52:19 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Account [NONE]: select account0_.id as id1_0_0_, account0_.account_id as account_2_0_0_, account0_.balance as balance3_0_0_, account0_.created_at as created_4_0_0_, account0_.currency as currency5_0_0_, account0_.updated_at as updated_6_0_0_, account0_.user_id as user_id7_0_0_ from payments.accounts account0_ where account0_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4031 - Static SQL for entity: org.val.entity.Role
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4036 -  Version select: select id from payments.roles where id =?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4039 -  Snapshot select: select role_.id, role_.created_at as created_2_4_, role_.deleted_at as deleted_3_4_, role_.description as descript4_4_, role_.role as role5_4_, role_.updated_at as updated_6_4_ from payments.roles role_ where role_.id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into payments.roles (created_at, deleted_at, description, role, updated_at, id) values (?, ?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Update 0: update payments.roles set created_at=?, deleted_at=?, description=?, role=?, updated_at=? where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from payments.roles where id=?
][2023-07-09 14:52:19 DEBUG AbstractEntityPersister:4047 -  Identity insert: insert into payments.roles (created_at, deleted_at, description, role, updated_at) values (?, ?, ?, ?, ?)
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19489b27]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=org.val.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.val.entity.Role, querySpaceUid=<gen:0>, path=org.val.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.val.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

][2023-07-09 14:52:19 DEBUG EntityLoader:129 - Static select for entity org.val.entity.Role [NONE]: select role0_.id as id1_4_0_, role0_.created_at as created_2_4_0_, role0_.deleted_at as deleted_3_4_0_, role0_.description as descript4_4_0_, role0_.role as role5_4_0_, role0_.updated_at as updated_6_4_0_ from payments.roles role0_ where role0_.id=?
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f0b93b4]
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1376883]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : deletedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : orderId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : productId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=org.val.entity.User.orders)
    - Returns
       - CollectionReturnImpl(collection=org.val.entity.User.orders, querySpaceUid=<gen:0>, path=[org.val.entity.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Order, querySpaceUid=<gen:1>, path=[org.val.entity.User.orders].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.val.entity.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.val.entity.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

][2023-07-09 14:52:19 DEBUG CollectionLoader:83 - Static select for collection org.val.entity.User.orders: select orders0_.user_id as user_id8_2_0_, orders0_.id as id1_2_0_, orders0_.id as id1_2_1_, orders0_.created_at as created_2_2_1_, orders0_.deleted_at as deleted_3_2_1_, orders0_.order_id as order_id4_2_1_, orders0_.product_id as product_5_2_1_, orders0_.status as status6_2_1_, orders0_.updated_at as updated_7_2_1_, orders0_.user_id as user_id8_2_1_ from payments.orders orders0_ where orders0_.user_id=?
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@456f7d9e]
][2023-07-09 14:52:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d366c2]
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accountId
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : balance
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createdAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : currency
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updatedAt
][2023-07-09 14:52:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userId
][2023-07-09 14:52:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
][2023-07-09 14:52:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
][2023-07-09 14:52:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=org.val.entity.User.accounts)
    - Returns
       - CollectionReturnImpl(collection=org.val.entity.User.accounts, querySpaceUid=<gen:0>, path=[org.val.entity.User.accounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.val.entity.Account, querySpaceUid=<gen:1>, path=[org.val.entity.User.accounts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.val.entity.User.accounts)
          - SQL table alias mapping - accounts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.val.entity.Account)
                - SQL table alias mapping - accounts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

][2023-07-09 14:52:19 DEBUG CollectionLoader:83 - Static select for collection org.val.entity.User.accounts: select accounts0_.user_id as user_id7_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.account_id as account_2_0_1_, accounts0_.balance as balance3_0_1_, accounts0_.created_at as created_4_0_1_, accounts0_.currency as currency5_0_1_, accounts0_.updated_at as updated_6_0_1_, accounts0_.user_id as user_id7_0_1_ from payments.accounts accounts0_ where accounts0_.user_id=?
][2023-07-09 14:52:19 DEBUG SchemaManagementToolCoordinator:556 - No schema actions specified
][2023-07-09 14:52:19 DEBUG SchemaManagementToolCoordinator:69 - No actions specified; doing nothing
][2023-07-09 14:52:19 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
][2023-07-09 14:52:19 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
][2023-07-09 14:52:19 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:52:19 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
][2023-07-09 14:52:19 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
][2023-07-09 14:52:19 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@571a9686
][2023-07-09 14:52:19 DEBUG NamedQueryRepository:171 - Checking 0 named HQL queries
][2023-07-09 14:52:19 DEBUG NamedQueryRepository:185 - Checking 0 named SQL queries
][2023-07-09 14:52:19 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 792dbb74-031b-482b-8949-3d0b628b8ac3 (<unnamed>)
][2023-07-09 14:52:19 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
][2023-07-09 14:52:19 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
][2023-07-09 14:52:19 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
][2023-07-09 14:52:19 DEBUG TransactionImpl:81 - begin
][2023-07-09 14:52:19 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
]java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.AbstractSharedSessionContract.buildQueryFromName(AbstractSharedSessionContract.java:923)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:902)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:114)
	at org.val.integration.IntegrationTestBase.makeDDL(IntegrationTestBase.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
[2023-07-09 14:52:19 DEBUG SessionFactoryImpl:821 - HHH000031: Closing
][2023-07-09 14:52:19 DEBUG TypeConfiguration$Scope:345 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2e71240b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6fa13e6]
][2023-07-09 14:52:19 DEBUG AbstractServiceRegistryImpl:428 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
][2023-07-09 14:52:19 INFO  pooling:550 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5433/postgres]
][2023-07-09 14:52:19 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
]